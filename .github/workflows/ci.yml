name: CI

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Run linting
      run: |
        uv run black --check --diff .
        uv run isort --check-only --diff .
        uv run mypy .
    
    - name: Run tests with coverage
      run: |
        uv run pytest --cov=src/mxcp --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false
        verbose: true  # Optional: for debugging

  # Run security checks on a single Python version to save CI time
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Check for security vulnerabilities
      run: |
        uv add --dev safety
        uv run safety check
      continue-on-error: true  # Don't fail CI, just warn

  # Verify the package can be built (useful even if you release manually)
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install build dependencies
      run: uv sync --dev
    
    - name: Build package
      run: |
        uv run python -m build
    
    - name: Check package metadata
      run: |
        uv run twine check dist/*
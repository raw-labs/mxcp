[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mxcp"
version = "0.5.1"
description = "Enterprise MCP framework for building production AI tools with SQL/Python, featuring security, audit trails, and policy enforcement"
authors = [{ name = "RAW Labs SA", email = "mxcp@raw-labs.com" }]
readme = "README.md"
license = "BUSL-1.1"
requires-python = ">=3.10"
dependencies = [
    # MCP Framework (needed by SDK)
    "mcp>=1.12,<1.14",  # Official MCP Python SDK
    "aiohttp>=3.8.0",  # HTTP transport for MCP
    "starlette>=0.27.0",  # HTTP server framework
    
    # Data & Processing (needed by SDK)
    "duckdb>=0.9.2",  # Embedded analytics database
    "pandas>=2.0.0",  # DataFrame operations with DuckDB
    "jsonschema>=4.0.0",  # Schema validation
    "pyyaml>=6.0.1",  # Configuration parsing
    "jinja2>=3.1.3",  # Template engine for SQL/Python generation
    "makefun",  # Dynamic function creation
    "cel-python>=0.2.0",  # Policy enforcement engine
    "httpx>=0.25.0",  # HTTP client for API calls
    
    # CLI Framework (always needed since this package includes CLI)
    "click>=8.1.7",  # CLI framework
    "posthog>=3.0.0",  # Usage analytics (always available)
    "dbt-core>=1.6.0",  # dbt core for data transformations
    "dbt-duckdb>=1.6.0",  # dbt DuckDB adapter
    
    # Observability (needed by SDK telemetry)
    "opentelemetry-api>=1.24.0",  # OpenTelemetry API
    "opentelemetry-sdk>=1.24.0",  # OpenTelemetry SDK
    "opentelemetry-exporter-otlp-proto-http>=1.24.0",  # OTLP HTTP exporter
    "opentelemetry-exporter-prometheus>=0.48b0",  # Prometheus metrics exporter
]

[project.scripts]
mxcp = "mxcp.__main__:cli"

[project.optional-dependencies]
# === Development Dependencies ===
dev = [
    "pytest",
    "pytest-asyncio",  # For testing async code
    "pytest-cov",  # For test coverage
    "pytest-mock",  # For better mock integration with pytest
    "pytest-timeout",  # For test timeout protection
    "aioresponses",  # For mocking HTTP requests
    "black",  # For code formatting
    "ruff",  # For linting and import sorting
    "mypy",  # For type checking
    "types-jsonschema",  # Type stubs for jsonschema
    "pandas-stubs",  # Type stubs for pandas
    "build",  # For building the package
    "twine",  # For publishing to PyPI
]

# === SDK Secret Providers (optional) ===
vault = [
    "hvac>=2.0.0",  # HashiCorp Vault client for mxcp.sdk.core.config.resolvers.vault
]
onepassword = [
    "onepassword-sdk>=0.3.0",  # 1Password SDK for mxcp.sdk.core.config.resolvers.onepassword
]

# === Everything Optional ===
all = [
    # Secret providers
    "hvac>=2.0.0",
    "onepassword-sdk>=0.3.0",
    # Development tools
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-timeout",
    "aioresponses",
    "black",
    "ruff",
    "mypy",
    "types-jsonschema",
    "pandas-stubs",
    "build",
    "twine",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = [
    "mxcp",
    "mxcp.runtime",  # Extension system - kept at top-level for backward compatibility
    "mxcp.plugins",  # Plugin system - kept at top-level for backward compatibility
    # Server
    "mxcp.server",
    # Server - Core modules
    "mxcp.server.core",
    "mxcp.server.core.auth",
    "mxcp.server.core.config",
    "mxcp.server.core.refs",
    # Server - Definitions
    "mxcp.server.definitions",
    "mxcp.server.definitions.endpoints",
    "mxcp.server.definitions.evals",
    # Server - Executor
    "mxcp.server.executor",
    "mxcp.server.executor.runners",
    "mxcp.server.executor.session",
    # Server - Interfaces
    "mxcp.server.interfaces",
    "mxcp.server.interfaces.cli",
    "mxcp.server.interfaces.server",
    # Server - Other core modules
    "mxcp.server.schemas",
    # Server - Services
    "mxcp.server.services",
    "mxcp.server.services.audit",
    "mxcp.server.services.dbt",
    "mxcp.server.services.drift",
    "mxcp.server.services.endpoints",
    "mxcp.server.services.evals",
    "mxcp.server.services.tests",
    # SDK
    "mxcp.sdk",
    "mxcp.sdk.audit",
    "mxcp.sdk.audit.backends",
    "mxcp.sdk.auth",
    "mxcp.sdk.auth.providers",
    "mxcp.sdk.core",
    "mxcp.sdk.core.analytics",
    "mxcp.sdk.core.config",
    "mxcp.sdk.core.config.resolvers",
    "mxcp.sdk.core.config.schemas",
    "mxcp.sdk.evals",
    "mxcp.sdk.executor",
    "mxcp.sdk.executor.plugins",
    "mxcp.sdk.executor.plugins.duckdb_plugin",
    "mxcp.sdk.executor.plugins.python_plugin",
    "mxcp.sdk.policy",
    "mxcp.sdk.telemetry",
    "mxcp.sdk.validator",
    "mxcp.sdk.validator.decorators",
    "mxcp.sdk.validator.decorators.schemas",
]
include-package-data = true

[tool.setuptools.package-data]
"mxcp" = ["py.typed"]
"mxcp.server.schemas" = ["*.json"]
"mxcp.sdk.core.config.schemas" = ["*.json"]
"mxcp.sdk.validator.decorators.schemas" = ["*.json"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v"
asyncio_mode = "auto"  # Enable async test support
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
target-version = "py310"

# Exclude paths from linting
extend-exclude = [
    "tests/",
    "examples/",
    "scripts/",
]

[tool.ruff.lint]
# Enable specific rule categories
select = [
    "F",     # Pyflakes (includes F401 for unused imports)
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "I",     # isort
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "SIM",   # flake8-simplify
    "C4",    # flake8-comprehensions
]

# Ignore specific rules
ignore = [
    "E501",  # Line too long (handled by black)
    "B008",  # Do not perform function calls in argument defaults
    "SIM108", # Use ternary operator instead of if-else block
]

# Configure import sorting to match previous isort config
[tool.ruff.lint.isort]
known-first-party = ["mxcp"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
strict_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
strict = true
# Use explicit package bases to avoid duplicate module issues
explicit_package_bases = true
# Tell mypy where to find the source code
packages = ["mxcp"]
# Explicitly set the source directory
mypy_path = "src"
# Exclude test and example directories
exclude = [
    "tests/",
    "examples/",
    "scripts/"
]

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "ruff>=0.12.8",
]

# Overrides removed - tests and examples are excluded above


[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mxcp"
version = "0.4.0"
description = "Enterprise MCP framework for building production AI tools with SQL/Python, featuring security, audit trails, and policy enforcement"
authors = [{ name = "RAW Labs SA", email = "mxcp@raw-labs.com" }]
readme = "README.md"
license = "BUSL-1.1"
requires-python = ">=3.10"
dependencies = [
    # MCP Framework (needed by SDK)
    "mcp~=1.12.0",  # Official MCP Python SDK
    "aiohttp>=3.8.0",  # HTTP transport for MCP
    "starlette>=0.27.0",  # HTTP server framework
    
    # Data & Processing (needed by SDK)
    "duckdb>=0.9.2",  # Embedded analytics database
    "pandas>=2.0.0",  # DataFrame operations with DuckDB
    "jsonschema>=4.0.0",  # Schema validation
    "pyyaml>=6.0.1",  # Configuration parsing
    "jinja2>=3.1.3",  # Template engine for SQL/Python generation
    "makefun",  # Dynamic function creation
    "cel-python>=0.2.0",  # Policy enforcement engine
    "httpx>=0.25.0",  # HTTP client for API calls
    
    # CLI Framework (always needed since this package includes CLI)
    "click>=8.1.7",  # CLI framework
    "posthog>=3.0.0",  # Usage analytics (always available)
    "dbt-core>=1.6.0",  # dbt core for data transformations
    "dbt-duckdb>=1.6.0",  # dbt DuckDB adapter
]

[project.scripts]
mxcp = "mxcp.__main__:cli"

[project.optional-dependencies]
# === Development Dependencies ===
dev = [
    "pytest",
    "pytest-asyncio",  # For testing async code
    "pytest-cov",  # For test coverage
    "pytest-mock",  # For better mock integration with pytest
    "pytest-timeout",  # For test timeout protection
    "aioresponses",  # For mocking HTTP requests
    "black",  # For code formatting
    "isort",  # For import sorting
    "mypy",  # For type checking
    "build",  # For building the package
    "twine",  # For publishing to PyPI
]

# === SDK Secret Providers (optional) ===
vault = [
    "hvac>=2.0.0",  # HashiCorp Vault client for mxcp.sdk.core.config.resolvers.vault
]
onepassword = [
    "onepassword-sdk>=0.3.0",  # 1Password SDK for mxcp.sdk.core.config.resolvers.onepassword
]

# === Everything Optional ===
all = [
    # Secret providers
    "hvac>=2.0.0",
    "onepassword-sdk>=0.3.0",
    # Development tools
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-timeout",
    "aioresponses",
    "black",
    "isort",
    "mypy",
    "build",
    "twine",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["mxcp", "mxcp.cli", "mxcp.config", "mxcp.config.config_schemas", "mxcp.dbt", "mxcp.drift.drift_schemas", "mxcp.endpoints.endpoint_schemas", "mxcp.evals", "mxcp.evals.eval_schemas", "mxcp.plugins", "mxcp.policies", "mxcp.runtime", "mxcp.sdk", "mxcp.sdk.audit", "mxcp.sdk.auth", "mxcp.sdk.core", "mxcp.sdk.core.analytics", "mxcp.sdk.core.config", "mxcp.sdk.core.config.resolvers", "mxcp.sdk.evals", "mxcp.sdk.executor", "mxcp.sdk.executor.plugins", "mxcp.sdk.executor.plugins.duckdb_plugin", "mxcp.sdk.executor.plugins.python_plugin", "mxcp.sdk.policy", "mxcp.sdk.validator", "mxcp.validator"]
include-package-data = true

[tool.setuptools.package-data]
"mxcp" = ["py.typed"]
"mxcp.config.config_schemas" = ["*.json"]
"mxcp.endpoints.endpoint_schemas" = ["*.json"]
"mxcp.drift.drift_schemas" = ["*.json"]
"mxcp.evals.eval_schemas" = ["*.json"]
"mxcp.sdk.core.config.schemas" = ["*.json"]
"mxcp.validator.schemas" = ["*.json"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v"
asyncio_mode = "auto"  # Enable async test support
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
strict_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
strict = true
# Tell mypy where to find the source code
packages = ["mxcp"]
# Explicitly set the source directory
mypy_path = "src"

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "examples.*"
]
disallow_untyped_defs = false
disallow_incomplete_defs = false


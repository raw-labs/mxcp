mxcp: 1

prompt:
  name: test_result_contains_failures_prompt
  description: Test endpoint for result_contains assertion failure scenarios
  parameters:
    - name: scenario
      type: string
      description: Test scenario to run
  messages:
    - role: user
      prompt: "Testing {{scenario}}"
    - role: assistant
      prompt: |
        {% if scenario == "simple_array" %}
        ["apple", "banana", "orange"]
        {% elif scenario == "number_array" %}
        [1, 2, 3, 4, 5]
        {% elif scenario == "empty_array" %}
        []
        {% elif scenario == "dict_result" %}
        {"name": "Alice", "age": 25}
        {% elif scenario == "array_of_dicts" %}
        [{"id": 1, "status": "active"}, {"id": 2, "status": "inactive"}]
        {% elif scenario == "string_result" %}
        Just a plain string
        {% elif scenario == "number_result" %}
        42
        {% else %}
        null
        {% endif %}
  
  tests:
    # These tests are expected to fail - we'll verify error messages in unit tests
    
    # Test 1: Array doesn't contain expected primitive
    - name: Array missing primitive value
      description: Should fail - array doesn't contain 'grape'
      arguments:
        - key: scenario
          value: "simple_array"
      result_contains: "grape"
    
    # Test 2: Dict missing expected field
    - name: Dict missing field
      description: Should fail - dict doesn't have 'email' field
      arguments:
        - key: scenario
          value: "dict_result"
      result_contains:
        email: "alice@example.com"
    
    # Test 3: Dict field has wrong value
    - name: Dict field wrong value
      description: Should fail - age is 25, not 30
      arguments:
        - key: scenario
          value: "dict_result"
      result_contains:
        age: 30
    
    # Test 4: Array of dicts missing matching item
    - name: Array of dicts no match
      description: Should fail - no item has status 'pending'
      arguments:
        - key: scenario
          value: "array_of_dicts"
      result_contains:
        status: "pending"
    
    # Test 5: Wrong result type for assertion
    - name: String result with dict pattern
      description: Should fail - string result with dict pattern
      arguments:
        - key: scenario
          value: "string_result"
      result_contains:
        name: "test"
    
    # Test 6: Empty array doesn't contain value
    - name: Empty array check
      description: Should fail - empty array can't contain anything
      arguments:
        - key: scenario
          value: "empty_array"
      result_contains: "anything"
    
    # Test 7: Number array missing value
    - name: Number array missing value
      description: Should fail - array doesn't contain 10
      arguments:
        - key: scenario
          value: "number_array"
      result_contains: 10 